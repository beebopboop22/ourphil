name: Run scrapers (Our Philly)

on:
  workflow_dispatch:
    inputs:
      script:
        description: "Which scraper to run"
        type: choice
        required: true
        default: scripts/scrape-philly700.py
        options:
          - scripts/scrape-philly700.py
          - scripts/scrape-punchline-philly.py
  schedule:
    # Nightly at 2:17 AM America/New_York
    - cron: "17 6 * * *"

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  # These must be set in: Settings → Secrets and variables → Actions → New repository secret
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  run-scraper:
    name: Run ${{ inputs.script || 'scripts/scrape-philly700.py' }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: scraper-${{ github.ref }}-${{ inputs.script || 'philly700' }}
      cancel-in-progress: false
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (requirements.txt if present)
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install minimal dependencies (fallback)
        if: hashFiles('requirements.txt') == ''
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 python-dotenv supabase

      - name: Verify environment variables
        run: |
          test -n "$SUPABASE_URL"
          test -n "$SUPABASE_SERVICE_ROLE_KEY"

      - name: Run scraper
        run: |
          python "${{ inputs.script || 'scripts/scrape-philly700.py' }}"
